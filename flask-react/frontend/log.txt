
> frontend@0.1.0 dev /content/traffic-incident-detection/flask-react/frontend
> concurrently "npm run start" "npm run start-backend"

[0] 
[0] > frontend@0.1.0 start /content/traffic-incident-detection/flask-react/frontend
[0] > react-scripts start
[0] 
[1] 
[1] > frontend@0.1.0 start-backend /content/traffic-incident-detection/flask-react/frontend
[1] > cd ../backend && env/bin/flask run
[1] 
[1]  * Serving Flask app 'backend.py'
[1]  * Debug mode: on
[1] [31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
[1]  * Running on http://127.0.0.1:5000
[1] [33mPress CTRL+C to quit[0m
[1]  * Restarting with stat
[1]  * Debugger is active!
[1]  * Debugger PIN: 229-473-475
[0] [HPM] Proxy created: /  -> https://ab0d-35-230-165-140.ngrok-free.app
[0] (node:38679) [DEP_WEBPACK_DEV_SERVER_ON_AFTER_SETUP_MIDDLEWARE] DeprecationWarning: 'onAfterSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.
[0] (Use `node --trace-deprecation ...` to show where the warning was created)
[0] (node:38679) [DEP_WEBPACK_DEV_SERVER_ON_BEFORE_SETUP_MIDDLEWARE] DeprecationWarning: 'onBeforeSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.
[0] Starting the development server...
[0] 
[0] [0;33mOne of your dependencies, babel-preset-react-app, is importing the
[0] "@babel/plugin-proposal-private-property-in-object" package without
[0] declaring it in its dependencies. This is currently working because
[0] "@babel/plugin-proposal-private-property-in-object" is already in your
[0] node_modules folder for unrelated reasons, but it [1mmay break at any time[0;33m.
[0] 
[0] babel-preset-react-app is part of the create-react-app project, [1mwhich
[0] is not maintianed anymore[0;33m. It is thus unlikely that this bug will
[0] ever be fixed. Add "@babel/plugin-proposal-private-property-in-object" to
[0] your devDependencies to work around this error. This will make this message
[0] go away.[0m
[0]   
[0] Compiled with warnings.
[0] 
[0] [eslint] 
[0] src/pages/homepage.tsx
[0]   Line 1:8:  'github_logo_light' is defined but never used  @typescript-eslint/no-unused-vars
[0]   Line 2:8:  'github_logo_dark' is defined but never used   @typescript-eslint/no-unused-vars
[0] 
[0] Search for the keywords to learn more about each warning.
[0] To ignore, add // eslint-disable-next-line to the line before.
[0] 
[0] WARNING in [eslint] 
[0] src/pages/homepage.tsx
[0]   Line 1:8:  'github_logo_light' is defined but never used  @typescript-eslint/no-unused-vars
[0]   Line 2:8:  'github_logo_dark' is defined but never used   @typescript-eslint/no-unused-vars
[0] 
[0] webpack compiled with 1 warning
[0] Files successfully emitted, waiting for typecheck results...
[0] Issues checking in progress...
[0] ERROR in src/components/navbar.tsx:6:14
[0] TS7006: Parameter 'props' implicitly has an 'any' type.
[0]     4 |
[0]     5 | class NavBar extends React.Component {
[0]   > 6 |  constructor(props) {
[0]       |              ^^^^^
[0]     7 |    super(props);
[0]     8 |    this.state = {
[0]     9 |    };
[0] 
[1] 127.0.0.1 - - [27/Nov/2023 07:27:51] "GET /api/videos-in-dataset/extracted_frames HTTP/1.1" 200 -
[1] 127.0.0.1 - - [27/Nov/2023 07:27:52] "GET /api/videos-in-dataset/extracted_frames HTTP/1.1" 200 -
[1] 127.0.0.1 - - [27/Nov/2023 07:27:52] "GET /api/videos-in-dataset/extracted_frames HTTP/1.1" 200 -
[1] 127.0.0.1 - - [27/Nov/2023 07:27:52] "GET /api/videos-in-dataset/extracted_frames HTTP/1.1" 200 -
[1] 127.0.0.1 - - [27/Nov/2023 07:27:53] "GET /api/videos-in-dataset/extracted_frames HTTP/1.1" 200 -
[1] 127.0.0.1 - - [27/Nov/2023 07:27:54] "GET /api/videos-in-dataset/extracted_frames HTTP/1.1" 200 -
[1] 127.0.0.1 - - [27/Nov/2023 07:27:54] "GET /api/videos-in-dataset/extracted_frames HTTP/1.1" 200 -
[1] 127.0.0.1 - - [27/Nov/2023 07:27:55] "GET /api/videos-in-dataset/extracted_frames HTTP/1.1" 200 -
[1] 127.0.0.1 - - [27/Nov/2023 07:27:55] "GET /api/videos-in-dataset/extracted_frames HTTP/1.1" 200 -
[1] 127.0.0.1 - - [27/Nov/2023 07:27:56] "GET /api/videos-in-dataset/extracted_frames HTTP/1.1" 200 -
[1] 127.0.0.1 - - [27/Nov/2023 07:27:57] "GET /api/videos-in-dataset/extracted_frames HTTP/1.1" 200 -
[1] 127.0.0.1 - - [27/Nov/2023 07:27:57] "GET /api/videos-in-dataset/extracted_frames HTTP/1.1" 200 -
[1] 127.0.0.1 - - [27/Nov/2023 07:27:58] "GET /api/videos-in-dataset/extracted_frames HTTP/1.1" 200 -
[1] 127.0.0.1 - - [27/Nov/2023 07:27:58] "GET /api/videos-in-dataset/extracted_frames HTTP/1.1" 200 -
[1] 127.0.0.1 - - [27/Nov/2023 07:27:59] "GET /api/videos-in-dataset/extracted_frames HTTP/1.1" 200 -
[1] 127.0.0.1 - - [27/Nov/2023 07:28:00] "GET /api/videos-in-dataset/extracted_frames HTTP/1.1" 200 -
[1] 127.0.0.1 - - [27/Nov/2023 07:28:00] "GET /api/videos-in-dataset/extracted_frames HTTP/1.1" 200 -
[1] 127.0.0.1 - - [27/Nov/2023 07:28:01] "GET /api/videos-in-dataset/extracted_frames HTTP/1.1" 200 -
[1] 127.0.0.1 - - [27/Nov/2023 07:28:01] "GET /api/videos-in-dataset/extracted_frames HTTP/1.1" 200 -
[1] 127.0.0.1 - - [27/Nov/2023 07:28:02] "GET /api/videos-in-dataset/extracted_frames HTTP/1.1" 200 -
[1] 127.0.0.1 - - [27/Nov/2023 07:28:02] "GET /api/videos-in-dataset/extracted_frames HTTP/1.1" 200 -
[1] 127.0.0.1 - - [27/Nov/2023 07:28:03] "GET /api/videos-in-dataset/extracted_frames HTTP/1.1" 200 -
[1] 127.0.0.1 - - [27/Nov/2023 07:28:03] "GET /api/videos-in-dataset/extracted_frames HTTP/1.1" 200 -
[1] 127.0.0.1 - - [27/Nov/2023 07:28:04] "GET /api/videos-in-dataset/extracted_frames HTTP/1.1" 200 -
[0] Compiling...
[0] Failed to compile.
[0] 
[0] SyntaxError: /content/traffic-incident-detection/flask-react/frontend/src/pages/homepage.tsx: Missing initializer in destructuring declaration. (15:20)
[0]   13 |   const [count, setCount] = useState(0);
[0]   14 |   const [options, setOptions] = useState(['option 1', 'option 2'])
[0] > 15 |   const [isLoading,]
[0]      |                     ^
[0]   16 |
[0]   17 |   console.log(datasetName);
[0]   18 |   console.log(currVideoName);
[0]     at parser.next (<anonymous>)
[0]     at normalizeFile.next (<anonymous>)
[0]     at run.next (<anonymous>)
[0] WARNING in [eslint] 
[0] src/pages/homepage.tsx
[0]   Line 1:8:   'github_logo_light' is defined but never used  @typescript-eslint/no-unused-vars
[0]   Line 2:8:   'github_logo_dark' is defined but never used   @typescript-eslint/no-unused-vars
[0]   Line 21:7:  'isLoading' is already defined                 @typescript-eslint/no-redeclare
[0]   Line 44:7:  'isLoading' is constant                        no-const-assign
[0] 
[0] ERROR in ./src/pages/homepage.tsx
[0] Module build failed (from ./node_modules/babel-loader/lib/index.js):
[0] SyntaxError: /content/traffic-incident-detection/flask-react/frontend/src/pages/homepage.tsx: Missing initializer in destructuring declaration. (15:20)
[0] 
[0]   13 |   const [count, setCount] = useState(0);
[0]   14 |   const [options, setOptions] = useState(['option 1', 'option 2'])
[0] > 15 |   const [isLoading,]
[0]      |                     ^
[0]   16 |
[0]   17 |   console.log(datasetName);
[0]   18 |   console.log(currVideoName);
[0]     at constructor (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:356:19)
[0]     at TypeScriptParserMixin.raise (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:3223:19)
[0]     at TypeScriptParserMixin.parseVar (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13262:16)
[0]     at TypeScriptParserMixin.parseVarStatement (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13100:10)
[0]     at TypeScriptParserMixin.parseVarStatement (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9306:31)
[0]     at TypeScriptParserMixin.parseStatementContent (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12683:23)
[0]     at TypeScriptParserMixin.parseStatementContent (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9340:18)
[0]     at TypeScriptParserMixin.parseStatementLike (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12588:17)
[0]     at TypeScriptParserMixin.parseStatementListItem (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12568:17)
[0]     at TypeScriptParserMixin.parseBlockOrModuleBlockBody (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13189:61)
[0]     at TypeScriptParserMixin.parseBlockBody (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13182:10)
[0]     at TypeScriptParserMixin.parseBlock (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13170:10)
[0]     at TypeScriptParserMixin.parseFunctionBody (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:11935:24)
[0]     at TypeScriptParserMixin.parseArrowExpression (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:11910:10)
[0]     at TypeScriptParserMixin.parseParenAndDistinguishExpression (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:11511:12)
[0]     at TypeScriptParserMixin.parseExprAtom (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:11137:23)
[0]     at TypeScriptParserMixin.parseExprAtom (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:6932:20)
[0]     at TypeScriptParserMixin.parseExprSubscripts (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10857:23)
[0]     at TypeScriptParserMixin.parseUpdate (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10840:21)
[0]     at TypeScriptParserMixin.parseMaybeUnary (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10816:23)
[0]     at TypeScriptParserMixin.parseMaybeUnary (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9696:18)
[0]     at TypeScriptParserMixin.parseMaybeUnaryOrPrivate (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10654:61)
[0]     at TypeScriptParserMixin.parseExprOps (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10659:23)
[0]     at TypeScriptParserMixin.parseMaybeConditional (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10636:23)
[0]     at TypeScriptParserMixin.parseMaybeAssign (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10597:21)
[0]     at TypeScriptParserMixin.parseMaybeAssign (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9643:20)
[0]     at /content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10567:39
[0]     at TypeScriptParserMixin.allowInAnd (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12279:16)
[0]     at TypeScriptParserMixin.parseMaybeAssignAllowIn (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10567:17)
[0]     at TypeScriptParserMixin.parseVar (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13259:91)
[0]     at TypeScriptParserMixin.parseVarStatement (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13100:10)
[0]     at TypeScriptParserMixin.parseVarStatement (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9306:31)
[0]     at TypeScriptParserMixin.parseStatementContent (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12683:23)
[0]     at TypeScriptParserMixin.parseStatementContent (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9340:18)
[0]     at TypeScriptParserMixin.parseStatementLike (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12588:17)
[0]     at TypeScriptParserMixin.parseModuleItem (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12565:17)
[0]     at TypeScriptParserMixin.parseBlockOrModuleBlockBody (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13189:36)
[0]     at TypeScriptParserMixin.parseBlockBody (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13182:10)
[0]     at TypeScriptParserMixin.parseProgram (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12464:10)
[0]     at TypeScriptParserMixin.parseTopLevel (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12454:25)
[0]     at TypeScriptParserMixin.parse (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:14376:10)
[0]     at TypeScriptParserMixin.parse (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9982:18)
[0]     at parse (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:14417:38)
[0]     at parser (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/core/lib/parser/index.js:41:34)
[0]     at parser.next (<anonymous>)
[0]     at normalizeFile (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/core/lib/transformation/normalize-file.js:64:37)
[0]     at normalizeFile.next (<anonymous>)
[0]     at run (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/core/lib/transformation/index.js:21:50)
[0]     at run.next (<anonymous>)
[0]     at transform (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/core/lib/transform.js:22:33)
[0] 
[0] webpack compiled with 1 error and 1 warning
[0] ERROR in src/components/navbar.tsx:6:14
[0] TS7006: Parameter 'props' implicitly has an 'any' type.
[0]     4 |
[0]     5 | class NavBar extends React.Component {
[0]   > 6 |  constructor(props) {
[0]       |              ^^^^^
[0]     7 |    super(props);
[0]     8 |    this.state = {
[0]     9 |    };
[0] 
[0] ERROR in src/pages/homepage.tsx:15:9
[0] TS1182: A destructuring declaration must have an initializer.
[0]     13 |   const [count, setCount] = useState(0);
[0]     14 |   const [options, setOptions] = useState(['option 1', 'option 2'])
[0]   > 15 |   const [isLoading,]
[0]        |         ^^^^^^^^^^^^
[0]     16 |
[0]     17 |   console.log(datasetName);
[0]     18 |   console.log(currVideoName);
[0] 
[0] ERROR in src/pages/homepage.tsx:15:10
[0] TS2451: Cannot redeclare block-scoped variable 'isLoading'.
[0]     13 |   const [count, setCount] = useState(0);
[0]     14 |   const [options, setOptions] = useState(['option 1', 'option 2'])
[0]   > 15 |   const [isLoading,]
[0]        |          ^^^^^^^^^
[0]     16 |
[0]     17 |   console.log(datasetName);
[0]     18 |   console.log(currVideoName);
[0] 
[0] ERROR in src/pages/homepage.tsx:15:10
[0] TS7031: Binding element 'isLoading' implicitly has an 'any' type.
[0]     13 |   const [count, setCount] = useState(0);
[0]     14 |   const [options, setOptions] = useState(['option 1', 'option 2'])
[0]   > 15 |   const [isLoading,]
[0]        |          ^^^^^^^^^
[0]     16 |
[0]     17 |   console.log(datasetName);
[0]     18 |   console.log(currVideoName);
[0] 
[0] ERROR in src/pages/homepage.tsx:21:7
[0] TS2451: Cannot redeclare block-scoped variable 'isLoading'.
[0]     19 |   console.log(currFilename);
[0]     20 |
[0]   > 21 |   let isLoading = true;
[0]        |       ^^^^^^^^^
[0]     22 |
[0]     23 |   let videoTitles = []
[0]     24 |   for (var i=0; i < 2; i++) {
[0] 
[0] ERROR in src/pages/homepage.tsx:44:7
[0] TS2588: Cannot assign to 'isLoading' because it is a constant.
[0]     42 |     .then(data => {
[0]     43 |       console.log(typeof data)
[0]   > 44 |       isLoading = false;
[0]        |       ^^^^^^^^^
[0]     45 |       setOptions(data);
[0]     46 |     })
[0]     47 |     .catch(error => console.error('Error:', error));
[0] 
[0] Compiling...
[0] Failed to compile.
[0] 
[0] SyntaxError: /content/traffic-incident-detection/flask-react/frontend/src/pages/homepage.tsx: Identifier 'isLoading' has already been declared. (21:6)
[0]   19 |   console.log(currFilename);
[0]   20 |
[0] > 21 |   let isLoading = true;
[0]      |       ^
[0]   22 |
[0]   23 |   let videoTitles = []
[0]   24 |   for (var i=0; i < 2; i++) {
[0] WARNING in [eslint] 
[0] src/pages/homepage.tsx
[0]   Line 1:8:    'github_logo_light' is defined but never used      @typescript-eslint/no-unused-vars
[0]   Line 2:8:    'github_logo_dark' is defined but never used       @typescript-eslint/no-unused-vars
[0]   Line 15:21:  'setIsLoading' is assigned a value but never used  @typescript-eslint/no-unused-vars
[0]   Line 21:7:   'isLoading' is already defined                     @typescript-eslint/no-redeclare
[0]   Line 44:7:   'isLoading' is constant                            no-const-assign
[0] 
[0] ERROR in ./src/pages/homepage.tsx
[0] Module build failed (from ./node_modules/babel-loader/lib/index.js):
[0] SyntaxError: /content/traffic-incident-detection/flask-react/frontend/src/pages/homepage.tsx: Identifier 'isLoading' has already been declared. (21:6)
[0] 
[0]   19 |   console.log(currFilename);
[0]   20 |
[0] > 21 |   let isLoading = true;
[0]      |       ^
[0]   22 |
[0]   23 |   let videoTitles = []
[0]   24 |   for (var i=0; i < 2; i++) {
[0]     at constructor (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:356:19)
[0]     at TypeScriptParserMixin.raise (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:3223:19)
[0]     at TypeScriptScopeHandler.checkRedeclarationInScope (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:1496:19)
[0]     at TypeScriptScopeHandler.declareName (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:1467:12)
[0]     at TypeScriptScopeHandler.declareName (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:7052:11)
[0]     at TypeScriptParserMixin.declareNameFromIdentifier (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:7484:16)
[0]     at TypeScriptParserMixin.checkIdentifier (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:7480:12)
[0]     at TypeScriptParserMixin.checkLVal (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:7419:12)
[0]     at TypeScriptParserMixin.parseVarId (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13280:10)
[0]     at TypeScriptParserMixin.parseVarId (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9609:11)
[0]     at TypeScriptParserMixin.parseVar (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13258:12)
[0]     at TypeScriptParserMixin.parseVarStatement (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13100:10)
[0]     at TypeScriptParserMixin.parseVarStatement (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9306:31)
[0]     at TypeScriptParserMixin.parseStatementContent (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12683:23)
[0]     at TypeScriptParserMixin.parseStatementContent (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9340:18)
[0]     at TypeScriptParserMixin.parseStatementLike (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12588:17)
[0]     at TypeScriptParserMixin.parseStatementListItem (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12568:17)
[0]     at TypeScriptParserMixin.parseBlockOrModuleBlockBody (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13189:61)
[0]     at TypeScriptParserMixin.parseBlockBody (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13182:10)
[0]     at TypeScriptParserMixin.parseBlock (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13170:10)
[0]     at TypeScriptParserMixin.parseFunctionBody (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:11935:24)
[0]     at TypeScriptParserMixin.parseArrowExpression (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:11910:10)
[0]     at TypeScriptParserMixin.parseParenAndDistinguishExpression (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:11511:12)
[0]     at TypeScriptParserMixin.parseExprAtom (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:11137:23)
[0]     at TypeScriptParserMixin.parseExprAtom (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:6932:20)
[0]     at TypeScriptParserMixin.parseExprSubscripts (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10857:23)
[0]     at TypeScriptParserMixin.parseUpdate (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10840:21)
[0]     at TypeScriptParserMixin.parseMaybeUnary (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10816:23)
[0]     at TypeScriptParserMixin.parseMaybeUnary (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9696:18)
[0]     at TypeScriptParserMixin.parseMaybeUnaryOrPrivate (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10654:61)
[0]     at TypeScriptParserMixin.parseExprOps (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10659:23)
[0]     at TypeScriptParserMixin.parseMaybeConditional (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10636:23)
[0]     at TypeScriptParserMixin.parseMaybeAssign (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10597:21)
[0]     at TypeScriptParserMixin.parseMaybeAssign (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9643:20)
[0]     at /content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10567:39
[0]     at TypeScriptParserMixin.allowInAnd (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12279:16)
[0]     at TypeScriptParserMixin.parseMaybeAssignAllowIn (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10567:17)
[0]     at TypeScriptParserMixin.parseVar (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13259:91)
[0]     at TypeScriptParserMixin.parseVarStatement (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13100:10)
[0]     at TypeScriptParserMixin.parseVarStatement (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9306:31)
[0]     at TypeScriptParserMixin.parseStatementContent (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12683:23)
[0]     at TypeScriptParserMixin.parseStatementContent (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9340:18)
[0]     at TypeScriptParserMixin.parseStatementLike (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12588:17)
[0]     at TypeScriptParserMixin.parseModuleItem (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12565:17)
[0]     at TypeScriptParserMixin.parseBlockOrModuleBlockBody (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13189:36)
[0]     at TypeScriptParserMixin.parseBlockBody (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13182:10)
[0]     at TypeScriptParserMixin.parseProgram (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12464:10)
[0]     at TypeScriptParserMixin.parseTopLevel (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12454:25)
[0]     at TypeScriptParserMixin.parse (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:14376:10)
[0]     at TypeScriptParserMixin.parse (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9982:18)
[0] 
[0] webpack compiled with 1 error and 1 warning
[0] Compiling...
[0] ERROR in src/components/navbar.tsx:6:14
[0] TS7006: Parameter 'props' implicitly has an 'any' type.
[0]     4 |
[0]     5 | class NavBar extends React.Component {
[0]   > 6 |  constructor(props) {
[0]       |              ^^^^^
[0]     7 |    super(props);
[0]     8 |    this.state = {
[0]     9 |    };
[0] 
[0] ERROR in src/pages/homepage.tsx:15:10
[0] TS2451: Cannot redeclare block-scoped variable 'isLoading'.
[0]     13 |   const [count, setCount] = useState(0);
[0]     14 |   const [options, setOptions] = useState(['option 1', 'option 2'])
[0]   > 15 |   const [isLoading, setIsLoading] = useState(true);
[0]        |          ^^^^^^^^^
[0]     16 |
[0]     17 |   console.log(datasetName);
[0]     18 |   console.log(currVideoName);
[0] 
[0] ERROR in src/pages/homepage.tsx:21:7
[0] TS2451: Cannot redeclare block-scoped variable 'isLoading'.
[0]     19 |   console.log(currFilename);
[0]     20 |
[0]   > 21 |   let isLoading = true;
[0]        |       ^^^^^^^^^
[0]     22 |
[0]     23 |   let videoTitles = []
[0]     24 |   for (var i=0; i < 2; i++) {
[0] 
[0] ERROR in src/pages/homepage.tsx:44:7
[0] TS2588: Cannot assign to 'isLoading' because it is a constant.
[0]     42 |     .then(data => {
[0]     43 |       console.log(typeof data)
[0]   > 44 |       isLoading = false;
[0]        |       ^^^^^^^^^
[0]     45 |       setOptions(data);
[0]     46 |     })
[0]     47 |     .catch(error => console.error('Error:', error));
[0] 
[0] Failed to compile.
[0] 
[0] SyntaxError: /content/traffic-incident-detection/flask-react/frontend/src/pages/homepage.tsx: Identifier 'isLoading' has already been declared. (21:6)
[0]   19 |   console.log(currFilename);
[0]   20 |
[0] > 21 |   let isLoading = true;
[0]      |       ^
[0]   22 |
[0]   23 |   let videoTitles = []
[0]   24 |   for (var i=0; i < 2; i++) {
[0] WARNING in [eslint] 
[0] src/pages/homepage.tsx
[0]   Line 1:8:    'github_logo_light' is defined but never used      @typescript-eslint/no-unused-vars
[0]   Line 2:8:    'github_logo_dark' is defined but never used       @typescript-eslint/no-unused-vars
[0]   Line 15:21:  'setIsLoading' is assigned a value but never used  @typescript-eslint/no-unused-vars
[0]   Line 21:7:   'isLoading' is already defined                     @typescript-eslint/no-redeclare
[0]   Line 44:7:   'isLoading' is constant                            no-const-assign
[0] 
[0] ERROR in ./src/pages/homepage.tsx
[0] Module build failed (from ./node_modules/babel-loader/lib/index.js):
[0] SyntaxError: /content/traffic-incident-detection/flask-react/frontend/src/pages/homepage.tsx: Identifier 'isLoading' has already been declared. (21:6)
[0] 
[0]   19 |   console.log(currFilename);
[0]   20 |
[0] > 21 |   let isLoading = true;
[0]      |       ^
[0]   22 |
[0]   23 |   let videoTitles = []
[0]   24 |   for (var i=0; i < 2; i++) {
[0]     at constructor (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:356:19)
[0]     at TypeScriptParserMixin.raise (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:3223:19)
[0]     at TypeScriptScopeHandler.checkRedeclarationInScope (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:1496:19)
[0]     at TypeScriptScopeHandler.declareName (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:1467:12)
[0]     at TypeScriptScopeHandler.declareName (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:7052:11)
[0]     at TypeScriptParserMixin.declareNameFromIdentifier (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:7484:16)
[0]     at TypeScriptParserMixin.checkIdentifier (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:7480:12)
[0]     at TypeScriptParserMixin.checkLVal (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:7419:12)
[0]     at TypeScriptParserMixin.parseVarId (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13280:10)
[0]     at TypeScriptParserMixin.parseVarId (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9609:11)
[0]     at TypeScriptParserMixin.parseVar (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13258:12)
[0]     at TypeScriptParserMixin.parseVarStatement (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13100:10)
[0]     at TypeScriptParserMixin.parseVarStatement (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9306:31)
[0]     at TypeScriptParserMixin.parseStatementContent (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12683:23)
[0]     at TypeScriptParserMixin.parseStatementContent (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9340:18)
[0]     at TypeScriptParserMixin.parseStatementLike (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12588:17)
[0]     at TypeScriptParserMixin.parseStatementListItem (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12568:17)
[0]     at TypeScriptParserMixin.parseBlockOrModuleBlockBody (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13189:61)
[0]     at TypeScriptParserMixin.parseBlockBody (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13182:10)
[0]     at TypeScriptParserMixin.parseBlock (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13170:10)
[0]     at TypeScriptParserMixin.parseFunctionBody (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:11935:24)
[0]     at TypeScriptParserMixin.parseArrowExpression (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:11910:10)
[0]     at TypeScriptParserMixin.parseParenAndDistinguishExpression (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:11511:12)
[0]     at TypeScriptParserMixin.parseExprAtom (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:11137:23)
[0]     at TypeScriptParserMixin.parseExprAtom (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:6932:20)
[0]     at TypeScriptParserMixin.parseExprSubscripts (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10857:23)
[0]     at TypeScriptParserMixin.parseUpdate (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10840:21)
[0]     at TypeScriptParserMixin.parseMaybeUnary (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10816:23)
[0]     at TypeScriptParserMixin.parseMaybeUnary (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9696:18)
[0]     at TypeScriptParserMixin.parseMaybeUnaryOrPrivate (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10654:61)
[0]     at TypeScriptParserMixin.parseExprOps (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10659:23)
[0]     at TypeScriptParserMixin.parseMaybeConditional (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10636:23)
[0]     at TypeScriptParserMixin.parseMaybeAssign (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10597:21)
[0]     at TypeScriptParserMixin.parseMaybeAssign (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9643:20)
[0]     at /content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10567:39
[0]     at TypeScriptParserMixin.allowInAnd (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12279:16)
[0]     at TypeScriptParserMixin.parseMaybeAssignAllowIn (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10567:17)
[0]     at TypeScriptParserMixin.parseVar (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13259:91)
[0]     at TypeScriptParserMixin.parseVarStatement (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13100:10)
[0]     at TypeScriptParserMixin.parseVarStatement (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9306:31)
[0]     at TypeScriptParserMixin.parseStatementContent (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12683:23)
[0]     at TypeScriptParserMixin.parseStatementContent (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9340:18)
[0]     at TypeScriptParserMixin.parseStatementLike (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12588:17)
[0]     at TypeScriptParserMixin.parseModuleItem (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12565:17)
[0]     at TypeScriptParserMixin.parseBlockOrModuleBlockBody (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13189:36)
[0]     at TypeScriptParserMixin.parseBlockBody (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13182:10)
[0]     at TypeScriptParserMixin.parseProgram (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12464:10)
[0]     at TypeScriptParserMixin.parseTopLevel (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12454:25)
[0]     at TypeScriptParserMixin.parse (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:14376:10)
[0]     at TypeScriptParserMixin.parse (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9982:18)
[0] 
[0] webpack compiled with 1 error and 1 warning
[0] ERROR in src/components/navbar.tsx:6:14
[0] TS7006: Parameter 'props' implicitly has an 'any' type.
[0]     4 |
[0]     5 | class NavBar extends React.Component {
[0]   > 6 |  constructor(props) {
[0]       |              ^^^^^
[0]     7 |    super(props);
[0]     8 |    this.state = {
[0]     9 |    };
[0] 
[0] ERROR in src/pages/homepage.tsx:15:10
[0] TS2451: Cannot redeclare block-scoped variable 'isLoading'.
[0]     13 |   const [count, setCount] = useState(0);
[0]     14 |   const [options, setOptions] = useState(['option 1', 'option 2'])
[0]   > 15 |   const [isLoading, setIsLoading] = useState(true);
[0]        |          ^^^^^^^^^
[0]     16 |
[0]     17 |   console.log(datasetName);
[0]     18 |   console.log(currVideoName);
[0] 
[0] ERROR in src/pages/homepage.tsx:21:7
[0] TS2451: Cannot redeclare block-scoped variable 'isLoading'.
[0]     19 |   console.log(currFilename);
[0]     20 |
[0]   > 21 |   let isLoading = true;
[0]        |       ^^^^^^^^^
[0]     22 |
[0]     23 |   let videoTitles = []
[0]     24 |   for (var i=0; i < 2; i++) {
[0] 
[0] ERROR in src/pages/homepage.tsx:44:7
[0] TS2588: Cannot assign to 'isLoading' because it is a constant.
[0]     42 |     .then(data => {
[0]     43 |       console.log(typeof data)
[0]   > 44 |       isLoading = false;
[0]        |       ^^^^^^^^^
[0]     45 |       setOptions(data);
[0]     46 |     })
[0]     47 |     .catch(error => console.error('Error:', error));
[0] 
[0] Compiling...
[0] Failed to compile.
[0] 
[0] SyntaxError: /content/traffic-incident-detection/flask-react/frontend/src/pages/homepage.tsx: Identifier 'isLoading' has already been declared. (21:6)
[0]   19 |   console.log(currFilename);
[0]   20 |
[0] > 21 |   let isLoading = true;
[0]      |       ^
[0]   22 |
[0]   23 |   let videoTitles = []
[0]   24 |   for (var i=0; i < 2; i++) {
[0] WARNING in [eslint] 
[0] src/pages/homepage.tsx
[0]   Line 1:8:    'github_logo_light' is defined but never used      @typescript-eslint/no-unused-vars
[0]   Line 2:8:    'github_logo_dark' is defined but never used       @typescript-eslint/no-unused-vars
[0]   Line 15:21:  'setIsLoading' is assigned a value but never used  @typescript-eslint/no-unused-vars
[0]   Line 21:7:   'isLoading' is already defined                     @typescript-eslint/no-redeclare
[0]   Line 44:7:   'isLoading' is constant                            no-const-assign
[0] 
[0] ERROR in ./src/pages/homepage.tsx
[0] Module build failed (from ./node_modules/babel-loader/lib/index.js):
[0] SyntaxError: /content/traffic-incident-detection/flask-react/frontend/src/pages/homepage.tsx: Identifier 'isLoading' has already been declared. (21:6)
[0] 
[0]   19 |   console.log(currFilename);
[0]   20 |
[0] > 21 |   let isLoading = true;
[0]      |       ^
[0]   22 |
[0]   23 |   let videoTitles = []
[0]   24 |   for (var i=0; i < 2; i++) {
[0]     at constructor (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:356:19)
[0]     at TypeScriptParserMixin.raise (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:3223:19)
[0]     at TypeScriptScopeHandler.checkRedeclarationInScope (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:1496:19)
[0]     at TypeScriptScopeHandler.declareName (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:1467:12)
[0]     at TypeScriptScopeHandler.declareName (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:7052:11)
[0]     at TypeScriptParserMixin.declareNameFromIdentifier (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:7484:16)
[0]     at TypeScriptParserMixin.checkIdentifier (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:7480:12)
[0]     at TypeScriptParserMixin.checkLVal (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:7419:12)
[0]     at TypeScriptParserMixin.parseVarId (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13280:10)
[0]     at TypeScriptParserMixin.parseVarId (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9609:11)
[0]     at TypeScriptParserMixin.parseVar (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13258:12)
[0]     at TypeScriptParserMixin.parseVarStatement (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13100:10)
[0]     at TypeScriptParserMixin.parseVarStatement (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9306:31)
[0]     at TypeScriptParserMixin.parseStatementContent (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12683:23)
[0]     at TypeScriptParserMixin.parseStatementContent (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9340:18)
[0]     at TypeScriptParserMixin.parseStatementLike (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12588:17)
[0]     at TypeScriptParserMixin.parseStatementListItem (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12568:17)
[0]     at TypeScriptParserMixin.parseBlockOrModuleBlockBody (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13189:61)
[0]     at TypeScriptParserMixin.parseBlockBody (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13182:10)
[0]     at TypeScriptParserMixin.parseBlock (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13170:10)
[0]     at TypeScriptParserMixin.parseFunctionBody (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:11935:24)
[0]     at TypeScriptParserMixin.parseArrowExpression (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:11910:10)
[0]     at TypeScriptParserMixin.parseParenAndDistinguishExpression (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:11511:12)
[0]     at TypeScriptParserMixin.parseExprAtom (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:11137:23)
[0]     at TypeScriptParserMixin.parseExprAtom (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:6932:20)
[0]     at TypeScriptParserMixin.parseExprSubscripts (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10857:23)
[0]     at TypeScriptParserMixin.parseUpdate (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10840:21)
[0]     at TypeScriptParserMixin.parseMaybeUnary (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10816:23)
[0]     at TypeScriptParserMixin.parseMaybeUnary (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9696:18)
[0]     at TypeScriptParserMixin.parseMaybeUnaryOrPrivate (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10654:61)
[0]     at TypeScriptParserMixin.parseExprOps (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10659:23)
[0]     at TypeScriptParserMixin.parseMaybeConditional (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10636:23)
[0]     at TypeScriptParserMixin.parseMaybeAssign (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10597:21)
[0]     at TypeScriptParserMixin.parseMaybeAssign (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9643:20)
[0]     at /content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10567:39
[0]     at TypeScriptParserMixin.allowInAnd (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12279:16)
[0]     at TypeScriptParserMixin.parseMaybeAssignAllowIn (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:10567:17)
[0]     at TypeScriptParserMixin.parseVar (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13259:91)
[0]     at TypeScriptParserMixin.parseVarStatement (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13100:10)
[0]     at TypeScriptParserMixin.parseVarStatement (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9306:31)
[0]     at TypeScriptParserMixin.parseStatementContent (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12683:23)
[0]     at TypeScriptParserMixin.parseStatementContent (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9340:18)
[0]     at TypeScriptParserMixin.parseStatementLike (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12588:17)
[0]     at TypeScriptParserMixin.parseModuleItem (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12565:17)
[0]     at TypeScriptParserMixin.parseBlockOrModuleBlockBody (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13189:36)
[0]     at TypeScriptParserMixin.parseBlockBody (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:13182:10)
[0]     at TypeScriptParserMixin.parseProgram (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12464:10)
[0]     at TypeScriptParserMixin.parseTopLevel (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:12454:25)
[0]     at TypeScriptParserMixin.parse (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:14376:10)
[0]     at TypeScriptParserMixin.parse (/content/traffic-incident-detection/flask-react/frontend/node_modules/@babel/parser/lib/index.js:9982:18)
[0] 
[0] webpack compiled with 1 error and 1 warning
[0] ERROR in src/components/navbar.tsx:6:14
[0] TS7006: Parameter 'props' implicitly has an 'any' type.
[0]     4 |
[0]     5 | class NavBar extends React.Component {
[0]   > 6 |  constructor(props) {
[0]       |              ^^^^^
[0]     7 |    super(props);
[0]     8 |    this.state = {
[0]     9 |    };
[0] 
[0] ERROR in src/pages/homepage.tsx:15:10
[0] TS2451: Cannot redeclare block-scoped variable 'isLoading'.
[0]     13 |   const [count, setCount] = useState(0);
[0]     14 |   const [options, setOptions] = useState(['option 1', 'option 2'])
[0]   > 15 |   const [isLoading, setIsLoading] = useState(true);
[0]        |          ^^^^^^^^^
[0]     16 |
[0]     17 |   console.log(datasetName);
[0]     18 |   console.log(currVideoName);
[0] 
[0] ERROR in src/pages/homepage.tsx:21:7
[0] TS2451: Cannot redeclare block-scoped variable 'isLoading'.
[0]     19 |   console.log(currFilename);
[0]     20 |
[0]   > 21 |   let isLoading = true;
[0]        |       ^^^^^^^^^
[0]     22 |
[0]     23 |   let videoTitles = []
[0]     24 |   for (var i=0; i < 2; i++) {
[0] 
[0] ERROR in src/pages/homepage.tsx:44:7
[0] TS2588: Cannot assign to 'isLoading' because it is a constant.
[0]     42 |     .then(data => {
[0]     43 |       console.log(typeof data)
[0]   > 44 |       isLoading = false;
[0]        |       ^^^^^^^^^
[0]     45 |       setOptions(data);
[0]     46 |     })
[0]     47 |     .catch(error => console.error('Error:', error));
[0] 
[0] npm run start exited with code SIGINT
[1] npm run start-backend exited with code SIGINT
